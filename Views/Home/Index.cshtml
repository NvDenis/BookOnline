@model IPagedList<bookstore.Models.Book>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using System.Text.Json
<style>
    /* Đổi màu nền cho nút phân trang */
    .pagination .page-link {
        background-color: #f8f9fa; /* Màu nền mặc định */
        color: #212529;
        border: 1px solid #dee2e6;
    }

    .pagination .page-item.active .page-link {
        background-color: #212529; /* Màu nền cho trang đang chọn */
        color: #fff;
        border-color: #212529;
    }

    .pagination .page-link:hover {
        background-color: #343a40; /* Màu khi hover */
        color: #fff;
    }
</style>
@{
    ViewData["Title"] = "Trang chủ";
    var currentSort = HttpContextAccessor.HttpContext.Request.Query["sortOrder"].ToString();
}

@await Html.PartialAsync("_Banner")

<div class="text-center container">
    <div class="row">
        <div class="col-md-3">
            @await Html.PartialAsync("_Topics")
            @await Html.PartialAsync("_Publishers")
        </div>
        <div class="col-md-9">
            <div class="d-flex justify-content-between align-items-center">
                <h4 class="text-center my-4">SÁCH MỚI</h4>

                <form method="get" class="w-50">
                    <div class="input-group">
                        <select name="sortOrder" class="form-select">
                            <option value="">-- Sắp xếp --</option>
                            <option value="price_asc" selected="@(currentSort == "price_asc")">Giá: Thấp → Cao</option>
                            <option value="price_desc" selected="@(currentSort == "price_desc")">Giá: Cao → Thấp</option>
                            <option value="name_asc" selected="@(currentSort == "name_asc")">Tên: A → Z</option>
                            <option value="name_desc" selected="@(currentSort == "name_desc")">Tên: Z → A</option>
                            <option value="newest" selected="@(currentSort == "newest")">Mới nhất</option>
                            <option value="oldest" selected="@(currentSort == "oldest")">Cũ nhất</option>
                        </select>
                        <button class="btn text-white" type="submit" style="background-color: #212529">Lọc</button>
                    </div>
                </form>
            </div>

            <div class="row">
                @foreach (var book in Model)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card h-100 w-100 p-2">
                            <a href="/book/@book._id">
                                @{
                                    var imgList = JsonSerializer.Deserialize<List<string>>(book.imgs ?? "[]");
                                    var firstImg = imgList.FirstOrDefault() ?? "/img/default.jpg"; // đường dẫn ảnh fallback nếu null
                                }
                                <img src="@firstImg" class="mx-auto d-block"
                                     style="max-height: 190px; width: auto; object-fit: contain;" alt="@book.name">
                            </a>
                            <div class="card-body">
                                <a href="/book/@book._id">
                                    <h5  style="text-align: left;color: #212529">@book.name</h5>
                                </a>
                                <p style="text-align: left;" class="m-0 fw-bold text-danger">@book.price.ToString("N0") ₫</p>
                                @* <p style="text-align: left;" class="m-0 text-danger">@book.price_original.ToString("N0") ₫</p> *@
                                <p style="text-align: left; text-decoration: line-through; color: lightgray">@book.price_original.ToString("N0") ₫</p>
                                <a class="btn btn-primary mt-2 w-100" href="/cart/addtocart/@book._id" style="background-color: #212529">Thêm vào giỏ</a>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Phân trang -->
            <nav class="d-flex justify-content-center mt-4" >
                @Html.PagedListPager(Model, page => Url.Action("Index", new
                {
                    page,
                                sortOrder = currentSort
                                }),
                                new PagedListRenderOptions
                                {
                                    UlElementClasses = new[] { "pagination" },
                                    LiElementClasses = new[] { "page-item" },
                                    PageClasses = new[] { "page-link" }
                                })
            </nav>
        </div>
    </div>
</div>
